{"ast":null,"code":"var _jsxFileName = \"/Users/suchirmvelpanur/Desktop/netflix-clone/src/Nav.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Nav.css';\nimport netflix from './netflix.jpg';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Nav() {\n  _s();\n  const [show, handleShow] = useState(false);\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > 100) {\n        handleShow(true);\n      } else {\n        handleShow(false);\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `nav ${show && \"nav_black\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nav__logo\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\",\n      alt: \"Netflix Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nav__avatar\",\n      src: netflix,\n      alt: \"Netflix Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Nav, \"MHfZsD0XXVtxKh+9nAuBK2pBIVw=\");\n_c = Nav;\nexport default Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","netflix","useEffect","useState","jsxDEV","_jsxDEV","Nav","_s","show","handleShow","handleScroll","window","scrollY","addEventListener","removeEventListener","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/suchirmvelpanur/Desktop/netflix-clone/src/Nav.js"],"sourcesContent":["import React from 'react'\nimport './Nav.css'\nimport netflix from './netflix.jpg'\nimport {useEffect, useState} from 'react'\n\nfunction Nav() {\n    const [show, handleShow] = useState(false)\n    useEffect(() => {\n        const handleScroll = () => {\n            if (window.scrollY > 100) {\n                handleShow(true);\n            } else {\n                handleShow(false);\n            }\n        };\n\n        window.addEventListener(\"scroll\", handleScroll);\n\n        return () => {\n            window.removeEventListener(\"scroll\", handleScroll);\n        };\n    }, []);\n  return (\n    <div className={`nav ${show && \"nav_black\"}`}>\n        <img\n        className='nav__logo'\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n            alt=\"Netflix Logo\"\n            />\n        <img\n        className='nav__avatar'\n            src={netflix}\n            alt=\"Netflix Logo\"\n            />\n    </div>\n  )\n}\n\nexport default Nav"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,eAAe;AACnC,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC1CD,SAAS,CAAC,MAAM;IACZ,MAAMQ,YAAY,GAAGA,CAAA,KAAM;MACvB,IAAIC,MAAM,CAACC,OAAO,GAAG,GAAG,EAAE;QACtBH,UAAU,CAAC,IAAI,CAAC;MACpB,CAAC,MAAM;QACHA,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDE,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAE/C,OAAO,MAAM;MACTC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IACtD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACR,oBACEL,OAAA;IAAKU,SAAS,EAAG,OAAMP,IAAI,IAAI,WAAY,EAAE;IAAAQ,QAAA,gBACzCX,OAAA;MACAU,SAAS,EAAC,WAAW;MACjBE,GAAG,EAAC,2EAA2E;MAC/EC,GAAG,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACNjB,OAAA;MACAU,SAAS,EAAC,aAAa;MACnBE,GAAG,EAAEhB,OAAQ;MACbiB,GAAG,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACf,EAAA,CA/BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAiCZ,eAAeA,GAAG;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}